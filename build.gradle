plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'ua.patronum'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.webjars:bootstrap:4.5.2'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.jacoco:org.jacoco.core:0.8.7'
    implementation 'org.jacoco:org.jacoco.report:0.8.7'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
}


tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('check') {
    dependsOn 'test'
}

tasks.jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
     afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/ua/patronum/quicklink/data/**',
                              '**/ua/patronum/quicklink/restapi/auth/LoginRequest.class',
                              '**/ua/patronum/quicklink/restapi/auth/LoginResponse.class',
                              '**/ua/patronum/quicklink/restapi/auth/RegistrationRequest.class',
                              '**/ua/patronum/quicklink/restapi/auth/RegistrationResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/CreateUrlRequest.class',
                              '**/ua/patronum/quicklink/restapi/url/CreateUrlResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/DeleteUrlResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/ExtensionTimeRequest.class',
                              '**/ua/patronum/quicklink/restapi/url/ExtensionTimeResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/GetAllActiveUrlsResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/GetAllUrlsResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/GetAllUserActiveUrlsResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/GetAllUserUrlsResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/RedirectRequest.class',
                              '**/ua/patronum/quicklink/restapi/url/RedirectResponse.class',
                              '**/ua/patronum/quicklink/restapi/url/UrlDto.class'])
        })
    }
}